name: Godot Builder

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+([a-zA-Z]*\-*)*'

env:
  GODOT_VERSION: 4.5.1
  EXPORT_NAME: Reia
  PROJECT_PATH: godot
  WINEPREFIX: /tmp/.wine

jobs:
  build-gdextension:
    name: Build Rust GDExtension (${{ matrix.platform }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: windows
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: reia_gdext-windows
            output: dll
          # - platform: linux
          #   runner: ubuntu-24.04
          #   target: x86_64-unknown-linux-gnu
          #   artifact: reia_gdext-linux
          #   output: so
          # - platform: mac
          #   runner: macos-15
          #   target: x86_64-apple-darwin
          #   artifact: reia_gdext-mac
          #   output: dylib
          # - platform: web
          #   runner: ubuntu-24.04
          #   target: wasm32-unknown-unknown
          #   artifact: reia_gdext-web
          #   output: wasm
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust/target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-
      - name: Ensure custom LFS config (Rust)
        run: |
          git lfs pull
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Build GDExtension
        run: |
          cd rust
          cargo build --release --target ${{ matrix.target }}
      - name: Upload GDExtension artifact
        uses: actions/upload-artifact@v5
        with:
          name: ${{ matrix.artifact }}
          path: rust/target/${{ matrix.target }}/release/reia.${{ matrix.output }}

  export:
    # needs: build-gdextension
    name: Export (${{ matrix.export }})
    runs-on: ${{ matrix.runner }}
    container:
      image: barichello/godot-ci:4.5.1
    strategy:
      matrix:
        include:
          - export: windows
            runner: ubuntu-24.04
            artifact: reia_gdext-windows
            ext: exe
            godot_export: win
            output_dir: build/windows
            export_name: windows
          # - export: linux
          #   runner: ubuntu-24.04
          #   artifact: reia_gdext-linux
          #   ext: x86_64
          #   godot_export: linux
          #   output_dir: build/linux
          #   export_name: linux
          # - export: server
          #   runner: ubuntu-24.04
          #   artifact: reia_gdext-linux
          #   ext: x86_64
          #   godot_export: server
          #   output_dir: build/server
          #   export_name: server
          # - export: mac
          #   runner: ubuntu-24.04
          #   artifact: reia_gdext-mac
          #   ext: zip
          #   godot_export: mac
          #   output_dir: build/mac
          #   export_name: mac
          # - export: web
          #   runner: ubuntu-24.04
          #   artifact: reia_gdext-web
          #   ext: html
          #   godot_export: web
          #   output_dir: build/web
          #   export_name: web
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Cache Godot export templates
        uses: actions/cache@v4
        with:
          path: ~/.local/share/godot/export_templates/
          key: ${{ runner.os }}-godot-templates-${{ env.GODOT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-godot-templates-
      - name: Ensure custom LFS config (Godot)
        working-directory: ${{ github.workspace }}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git lfs install --local
          git lfs pull
      - name: Download Rust GDExtension
        uses: actions/download-artifact@v6
        with:
          name: ${{ matrix.artifact }}
          path: rust/target/release/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot || true
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable || true
      - name: Export Build
        run: |
          mkdir -v -p ${{ matrix.output_dir }}
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "${{ matrix.godot_export }}" "$EXPORT_DIR/${{ matrix.export_name }}/${EXPORT_NAME}.${{ matrix.ext }}"
      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: ${{ matrix.export_name }}
          path: ${{ matrix.output_dir }}

  release-notes:
    name: Release Notes
    runs-on: ubuntu-latest
    needs: export
    if: ${{ always() && !cancelled() && needs.export.result == 'success' && startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Format Tag Name
        id: replace_string
        uses: frabert/replace-string-action@v2
        with:
          pattern: '\.'
          string: ${{ github.ref_name }}
          replace-with: "_"
      - name: Create Release And Upload Asset
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            build/windows
          # build/linux
          # build/server
          # build/mac
          # build/web
          tag_name: ${{ github.ref_name }}
          body: |
            # Reia - `${{ github.ref_name }}`

            ...

            ### Changes
            **Added:**
            - ...

            **Removed:**
            - ...

            **Changed:**
            - ...

            **Fixed:**
            - ...

            ----

            ...
          draft: true
          prerelease: true
